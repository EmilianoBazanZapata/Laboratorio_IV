/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;

import Controlador.GestorBD;
import Modelo.Producto;
import java.awt.event.MouseAdapter;
import java.beans.Statement;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author Emiliano
 */
public class frmProducto extends javax.swing.JFrame {

    /**
     * Creates new form frmProducto
     */
    public frmProducto() {
        initComponents();
        //cargo la tabla al iniciar la aplicacion 
        CargarTabal();
        //desactivo el boton actualizar
        btnActualizar.setEnabled(false);
    }
    
    private void CargarTabal() {
        //creo una instancia del gestor para poder acceder a los metodos
        GestorBD gestor = new GestorBD();
        
        //creo una lista para mostrar en la tabla
        ArrayList<Producto> producto = gestor.ObtenerProductos();
        
        DefaultTableModel modelo = new DefaultTableModel();
        //asigno el titulo y cantidad de celdas a mostrar
        modelo.setColumnIdentifiers(new String[]{"nombre", "precio", "id"});
        for (Producto v : producto) {
            modelo.addRow(new Object[]{v.getNombre(), v.getPrecio(), v.getId()});
        }
        //esto es necesario para ocultar el campo id y no mostrarlo en la tabla
        tblLista.setModel(modelo);
        TableColumn columna = tblLista.getColumnModel().getColumn(2);
        //coloco un tamaño maximo y minimo de 0 
        columna.setMaxWidth(0);
        columna.setMinWidth(0);
        columna.setPreferredWidth(0);
        //desactivo la propiedad para poder aumentar el tamaño de la celda con el mouse
        TableColumn columna1 = tblLista.getColumnModel().getColumn(1);
        columna1.setResizable(false);
    }
    //metodo para limpiar los textbox
    private void Limpiartxts() {
        
        txtNombre.setText(null);
        txtPrecio.setText(null);
    }
    
    //metodo para desactivar los botones
    private void DesactivarBotones()
    {
        btnAgregar.setEnabled(false);
        btnEditar.setEnabled(false);
        btnEliminar.setEnabled(false);
        btnActualizar.setEnabled(true);
    }
    //metodo para activar los botones
    private void ActivarBotones()
    {
        btnAgregar.setEnabled(true);
        btnEditar.setEnabled(true);
        btnEliminar.setEnabled(true);
        btnActualizar.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtPrecio = new javax.swing.JTextField();
        btnAgregar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblLista = new javax.swing.JTable();
        btnActualizar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Nombre : ");

        jLabel2.setText("Precio  :");

        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        tblLista.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tblLista);

        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnEliminar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnAgregar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtNombre, javax.swing.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE)
                            .addComponent(txtPrecio)))
                    .addComponent(btnEditar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnActualizar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 475, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(275, 275, 275))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(26, 26, 26)
                        .addComponent(btnAgregar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnActualizar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEditar)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnEliminar)
                .addContainerGap(68, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        
        try {
            //paso por variables el valor de cata textbox
            String nombre = txtNombre.getText();
            double precio = Double.parseDouble(txtPrecio.getText());
            
            //instancias un nuevo producto
                                      //el cero lo colocas por que es un campo identity 
                                      //y asi no generas algun error
            Producto p = new Producto(0, nombre, precio);
            
            //instancias el gestor y llamas el metodo para realizar el insert  
            GestorBD gestor = new GestorBD();
            
            boolean consulta = gestor.AgregarVenta(p);
            if (consulta) {
                JOptionPane.showMessageDialog(this, "La venta se registro exitosamente");
            } else {
                JOptionPane.showMessageDialog(this, "La venta no se registro exitosamente");
            }
            //cargas la tabla con los nuevos valores
            CargarTabal();
            //limpias los campos
            Limpiartxts();            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "debe ingresar datos validos");
            Limpiartxts();
        }
        

    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        //paso el valor de la fila seleccionada a los txts 
        try {
            txtNombre.setText(tblLista.getValueAt(tblLista.getSelectedRow(), 0).toString());
            txtPrecio.setText(tblLista.getValueAt(tblLista.getSelectedRow(), 1).toString());
            //activo el boton actualizar
            DesactivarBotones();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "debe seleccionar un elemento de la lista para editar");
        }
        

    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        //tomo el valor de los txts y los asigno a las variables 
        try {
            String nombre = txtNombre.getText();
            double precio = Double.parseDouble(txtPrecio.getText());
            int id = Integer.parseInt(tblLista.getValueAt(tblLista.getSelectedRow(), 2).toString());
            
            Producto p = new Producto(id, nombre, precio);
            //instancio el gestor para acceder al metodo para actualizar 
            GestorBD gestor = new GestorBD();
//            

//            System.out.println(nombre);
//            System.out.println(precio);
            
            boolean consulta = gestor.Actualizar(p);
            if (consulta) {
                JOptionPane.showMessageDialog(this, "La venta se Actualizo exitosamente");
            } else {
                JOptionPane.showMessageDialog(this, "La venta no se Actualizo exitosamente");
            }
            CargarTabal();
            Limpiartxts();
            ActivarBotones();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Debe ingresar datos correctos");
            Limpiartxts();
        }
        

    }//GEN-LAST:event_btnActualizarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        
        //paso el valor de las variable 
        //el nombre y el precio es 0 , por que necesitas los valores al instanciar el producto 
        //pero no necesitas pasr valores , por eso es 0 
        try {
            String nombre = "";
            double precio = 0;
            int id = Integer.parseInt(tblLista.getValueAt(tblLista.getSelectedRow(), 2).toString());
            
            Producto p = new Producto(id, nombre, precio);
            GestorBD gestor = new GestorBD();
            
            //esto lo hago para ver si en realidad estoy pasando el id correcto 
//            System.out.println(id);
//            System.out.println(nombre);
//            System.out.println(precio);
            
            boolean consulta = gestor.BorrarVenta(p);
            if (consulta) {
                JOptionPane.showMessageDialog(this, "La venta se Borro exitosamente");
            } else {
                JOptionPane.showMessageDialog(this, "La venta no se Borro exitosamente");
            }
            CargarTabal();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Debe seleccionar un elemento de la lista para eliminarlo");
            
        }
        
    }//GEN-LAST:event_btnEliminarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmProducto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmProducto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmProducto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmProducto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmProducto().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblLista;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtPrecio;
    // End of variables declaration//GEN-END:variables
}
